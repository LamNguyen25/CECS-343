/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DisplayImage;

import java.awt.*;
import java.util.LinkedList;
import javax.swing.*;

/**
 *
 * @author Hueletl
 */
public class ChooseMonster extends JFrame {
    // Variables declaration - do not modify  
    private JLabel backGround;
    private final LinkedList <JButton> monsterButtons;
    private JButton monsterButton;
    private final LinkedList <Monster> monsters;
    private final LinkedList <String> names;
    private Monster monster;
    private JButton Confirm;
    private Integer numPlayers;
    private int heading;
    

    private ChooseMonster(ChooseMonster chooseMonster){
        Setting.window(this, chooseMonster.getWidth(), chooseMonster.getHeight(), true);
        this.setContentPane(chooseMonster.getContentPane());
        
        this.backGround = chooseMonster.backGround;
        this.monsterButtons = chooseMonster.monsterButtons;
        this.monsterButton = chooseMonster.monsterButton;
        this.monsters = chooseMonster.monsters;
        this.names = chooseMonster.names;
        this.monster = chooseMonster.monster;
        this.Confirm = chooseMonster.Confirm;
        this.numPlayers = chooseMonster.numPlayers;
        this.heading = chooseMonster.heading;
        
        JLabel line = (JLabel) getContentPane().getComponent(heading);
        line.setText("Player"+Integer.toString(monsters.size() + 1));

    }
    
    
    public ChooseMonster(LinkedList <Monster> monsters, int numPlayers) {
        
        this.numPlayers = numPlayers;
        this.monsters = monsters;
        this.names = new LinkedList<>();
        this.monsterButtons = new LinkedList<>();
        this.names.add("CyberKitty");
        this.names.add("GigaZaur");
        this.names.add("Alienoid");
        this.names.add("SpacePenguin");
        this.names.add("King");
        this.names.add("MecaDragon");
        
        initComponents();       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        Confirm = new JButton();
        backGround = new JLabel();
        int windowW = 1200;
        int windowH = 800;
        int windowMX = windowW/2;
        
        
        Setting.button(this, Confirm, 0, 0, 100, 30, false);
        Confirm.setText("Confirm");
        Confirm.setVisible(false);
        Confirm.addActionListener(this::ConfirmActionPerformed);
        
        for(int i = 0; i < names.size(); ++i){

            int x = 70;
            int y = 130;
            
            int k = i%3;
            if(k == 0){
                y += ((i/3)*(266 +  50));
            }else{
                x = x + k*(300 + 80);    
                y = y + ((int)Math.floor(i/3) * (266 + 50));
                }
            setCharacter( names.get(i), i + 1,x, y, 300, 266);
            
            switch (i) {
                case 0:  //top left
                    monsterButton.addActionListener(this::Character0ActionPerformed);
                    break;
                case 1:  //top right
                    monsterButton.addActionListener(this::Character1ActionPerformed);
                    break;
                case 2:  //bottom left
                    monsterButton.addActionListener(this::Character2ActionPerformed);
                    break;
                case 3:  //bottom right
                    monsterButton.addActionListener(this::Character3ActionPerformed);
                    break;
                case 4:  //bottom right
                    monsterButton.addActionListener(this::Character4ActionPerformed);
                    break;
                case 5:  //bottom right
                    monsterButton.addActionListener(this::Character5ActionPerformed);
                    break;
                default:
                    break;
            }      
        }
        
        /*Sets Text on Main Window*/
        heading = Setting.windowText(this, "Player"+Integer.toString(monsters.size() + 1)  +"\nChoose A Monster", 36, Color.BLACK, windowMX-185, 30, 370, 40,false);
        
        Setting.window(this, backGround, "KingOfTokyo.jpg", "Choose A Monster", windowW, windowH, true);

        pack();
    }// </editor-fold>                        

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        Confirm.setVisible(false);
        
        this.monsters.add(monster);//only adds monster; monster is not created here
        this.numPlayers -= 1; 
        if(numPlayers > 0){
            //creates a new window with this current window
//            JFrame chooseMonster = new ChooseMonster(this);
//            chooseMonster.setVisible(true);

            //changes the heading to show the current player number
            JLabel line = (JLabel) getContentPane().getComponent(heading);
            line.setText("Player"+Integer.toString(monsters.size() + 1));
        }else{
            this.setVisible(false);
            JFrame board = new Board(this.monsters);
            board.setVisible(true);
        }
    }                                       

    private void Character0ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here: 
        CharacterAction(0); 
    }                                          

    private void Character1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        CharacterAction(1); 
    }                                          

    private void Character2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        CharacterAction(2); 
    }                                          

    private void Character3ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        CharacterAction(3); 
    }                                          

    private void Character4ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        CharacterAction(4);                                       
    }
    private void Character5ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        CharacterAction(5);
        
    }     
    
    private void CharacterAction(int i){
        moveConfirmCancelButtons(monsterButtons.get(i));
        monster = new Monster(names.get(i), monsters.size() + 1);//creating the monster with name and player number
    }
    
    private void setCharacter(String name, int playerNumber,int x, int y, int w, int h){

        int nameX =  (x + w/2) - 140;
        int nameY = y + 220;

        JLabel label = new JLabel();
        Setting.frame(this, label, nameX, nameY, 280, 40,false);
        Setting.frameText(label,name, 32, Color.yellow);
        
        monsterButton = new JButton();
        Setting.button(this, monsterButton, x, y, w, h, true);
        Setting.image(monsterButton, name + ".jpg");
        monsterButtons.add(monsterButton);
    }
    
    private void moveConfirmCancelButtons(JButton monster){
        
        int x = monster.getX() + (monster.getWidth()-Confirm.getWidth())/2 ;
        int y = monster.getY() + 200;
        
        Confirm.setLocation(x, y);
        Confirm.setVisible(true); 
    }
}
